@model backenddb_c.Models.Cajero

@{
    ViewData["Title"] = "Nuevo Cajero Automático";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0"><i class="fas fa-atm mr-2"></i>Registrar Nuevo Cajero</h2>
        </div>
        <div class="card-body">
            <form asp-action="Create" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="form-group">
                    <label asp-for="CodigoCajero" class="font-weight-bold">Código del Cajero</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fas fa-barcode"></i></span>
                        </div>
                        <input asp-for="CodigoCajero" class="form-control"
                            placeholder="Ingrese el código único del cajero" required />
                    </div>
                    <span asp-validation-for="CodigoCajero" class="text-danger small"></span>
                    <small class="form-text text-muted">Código numérico único que identifica al cajero</small>
                </div>

                <div class="form-group">
                    <label asp-for="Ubicacion" class="font-weight-bold">Ubicación</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                        </div>
                        <input asp-for="Ubicacion" class="form-control" placeholder="Ej: Av. Principal #123, Centro"
                            required />
                    </div>
                    <span asp-validation-for="Ubicacion" class="text-danger small"></span>
                    <small class="form-text text-muted">Dirección física donde se encuentra instalado</small>
                </div>

                <div class="form-group">
                    <label asp-for="Saldo" class="font-weight-bold">Saldo Inicial</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">$</span>
                        </div>
                        <input asp-for="Saldo" class="form-control" type="number" step="0.01" min="0" placeholder="0.00"
                            required />
                    </div>
                    <span asp-validation-for="Saldo" class="text-danger small"></span>
                    <small class="form-text text-muted">Fondos iniciales disponibles en el cajero</small>
                </div>

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary btn-lg mr-2">
                        <i class="fas fa-save mr-1"></i> Registrar Cajero
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                        <i class="fas fa-arrow-left mr-1"></i> Volver al Listado
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .card {
            border-radius: 10px;
            overflow: hidden;
        }

        .card-header {
            border-radius: 0 !important;
        }

        .form-control {
            border-radius: 0.25rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        .form-control:focus {
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .input-group-text {
            background-color: #f8f9fa;
        }

        .btn-lg {
            padding: 0.5rem 1.5rem;
        }
    </style>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Validación en tiempo real
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Formatear automáticamente el saldo
        document.getElementById('Saldo').addEventListener('blur', function (e) {
            let value = parseFloat(this.value);
            if (!isNaN(value)) {
                this.value = value.toFixed(2);
            }
        });
    </script>
}